<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements. See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership. The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License. You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.apache</groupId>
        <artifactId>apache</artifactId>
        <!-- Note: versions 10 to 12 declare a reportSet with reports
                   that we don't need/want; don't use these versions -->
        <version>13</version>
    </parent>
    <groupId>org.apache.ws.commons.axiom</groupId>
    <artifactId>axiom</artifactId>
    <name>Axiom</name>
    <version>1.2.15-SNAPSHOT</version>
    <packaging>pom</packaging>
    <description>AXIOM API</description>
    <url>http://ws.apache.org/axiom/</url>
    <issueManagement>
        <system>JIRA</system>
        <url>http://issues.apache.org/jira/browse/AXIOM</url>
    </issueManagement>
    <inceptionYear>2004</inceptionYear>
    <developers>
        <developer>
            <name>Saminda Abeyruwan</name>
            <id>saminda</id>
            <email>saminda AT wso2.com</email>
            <organization>WSO2</organization>
        </developer>
        <developer>
            <name>Afkham Azeez</name>
            <id>azeez</id>
            <email>azeez AT wso2.com</email>
            <organization>WSO2</organization>
        </developer>
        <developer>
            <name>Eran Chinthaka</name>
            <id>chinthaka</id>
            <email>chinthaka AT wso2.com</email>
            <organization>WSO2</organization>
            <url>http://www.apache.org/~chinthaka</url>
        </developer>
        <developer>
            <name>Glen Daniels</name>
            <id>gdaniels</id>
            <email>gdaniels AT apache.org</email>
            <organization>Sonic Software</organization>
        </developer>
        <developer>
            <name>Jaliya Ekanayake</name>
            <id>jaliya</id>
            <email>jaliya AT opensource.lk</email>
            <organization>Virtusa / Lanka Software Foundation</organization>
            <url>http://www.apache.org/~jaliya</url>
        </developer>
        <developer>
            <name>Senaka Fernando</name>
            <id>senaka</id>
            <email>senaka AT apache.org</email>
            <organization>WSO2</organization>
        </developer>
        <developer>
            <name>Nandana Mihindukulasooriya</name>
            <id>nandana</id>
            <email>nandana AT wso2.com</email>
            <organization>WSO2</organization>
        </developer>
        <developer>
            <name>Ruchith Fernando</name>
            <id>ruchith</id>
            <email>ruchith AT wso2.com</email>
            <organization>WSO2</organization>
        </developer>
        <developer>
            <id>thilina</id>
            <name>Thilina Gunarathne</name>
            <email>thilina AT wso2.com</email>
            <url>http://www.apache.org/~thilina</url>
            <organization>WSO2</organization>
        </developer>
        <developer>
            <name>Chathura Herath</name>
            <id>chathura</id>
            <email>chathura AT opensource.lk</email>
            <organization>LSF/MIT</organization>
            <url>http://www.apache.org/~chathura</url>
        </developer>
        <developer>
            <name>Deepal Jayasinghe</name>
            <id>deepal</id>
            <email>deepal AT wso2.com</email>
            <organization>WSO2</organization>
            <url>http://www.apache.org/~deepal</url>
        </developer>
        <developer>
            <name>Chatra Nakkawita</name>
            <id>chatra</id>
            <email>chatra AT WSO2.com</email>
            <organization>WSO2</organization>
        </developer>
        <developer>
            <name>Srinath Perera</name>
            <id>hemapani</id>
            <email>hemapani AT apache.org</email>
            <organization>Lanka Software Foundation</organization>
            <url>http://www.apache.org/~hemapani</url>
        </developer>
        <developer>
            <name>Ajith Ranabahu</name>
            <id>ajith</id>
            <email>ajith AT wso2.com</email>
            <organization>WSO2</organization>
            <url>http://www.apache.org/~ajith</url>
        </developer>
        <developer>
            <name>Venkat Reddy</name>
            <id>venkat</id>
            <email>vreddyp AT gmail.com</email>
            <organization>Computer Associates</organization>
        </developer>
        <developer>
            <name>Rich Scheuerle</name>
            <id>scheu</id>
            <email>scheu AT us.ibm.com</email>
            <organization>IBM</organization>
        </developer>
        <developer>
            <name>Ashutosh Shahi</name>
            <id>ashu</id>
            <email>Ashutosh.Shahi AT ca.com</email>
            <organization>Computer Associates</organization>
        </developer>
        <developer>
            <name>Aleksander Slominski</name>
            <id>alek</id>
            <email>aslom AT cs.indiana.edu</email>
            <organization>Indiana University Extreme! Computing Lab</organization>
        </developer>
        <developer>
            <name>Davanum Srinivas</name>
            <id>dims</id>
            <email>davanum AT gmail.com</email>
            <organization>IBM</organization>
        </developer>
        <developer>
            <name>Jayachandra Sekhara Rao Sunkara</name>
            <id>jaya</id>
            <email>jayachandra AT gmail.com</email>
            <organization>Computer Associates</organization>
        </developer>
        <developer>
            <name>Andreas Veithen</name>
            <id>veithen</id>
            <email>veithen AT google.com</email>
            <url>http://www.linkedin.com/in/aveithen</url>
            <organization>Google</organization>
        </developer>
        <developer>
            <name>Dasarath Weerathunga</name>
            <id>dasarath</id>
            <email>dasarath AT opensource.lk</email>
            <organization>Lanka Software Foundation</organization>
        </developer>
        <developer>
            <name>Sanjiva Weerawarana</name>
            <id>sanjiva</id>
            <email>sanjiva AT wso2.com</email>
            <organization>WSO2</organization>
        </developer>
    </developers>
    <contributors>
        <contributor>
            <name>Dharshana Dias</name>
            <email />
            <organization>Lanka Software Foundation / University of Moratuwa</organization>
        </contributor>
        <contributor>
            <name>Anushka Kumara</name>
            <email>anushkakumar AT gmail.com</email>
            <organization>Lanka Software Foundation / University of Moratuwa</organization>
        </contributor>
        <contributor>
            <name>Chinthaka Thilakarathne</name>
            <email />
            <organization>Lanka Software Foundation / University of Moratuwa</organization>
        </contributor>
        <contributor>
            <name>Jochen Wiedmann</name>
            <email>jochen.wiedmann AT gmail.com</email>
        </contributor>
    </contributors>
    <scm>
        <connection>scm:svn:http://svn.apache.org/repos/asf/webservices/commons/trunk/modules/axiom</connection>
        <developerConnection>scm:svn:https://svn.apache.org/repos/asf/webservices/commons/trunk/modules/axiom</developerConnection>
        <url>http://svn.apache.org/viewvc/webservices/commons/trunk/modules/axiom</url>
    </scm>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-stax-api_1.0_spec</artifactId>
                <version>1.0.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-activation_1.1_spec</artifactId>
                <version>1.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-javamail_1.4_spec</artifactId>
                <version>1.7.1</version>
            </dependency>
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>1.1.1</version>
                <exclusions>
                    <exclusion>
                        <artifactId>avalon-framework</artifactId>
                        <groupId>avalon-framework</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>logkit</artifactId>
                        <groupId>logkit</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>log4j</artifactId>
                        <groupId>log4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>${stax.impl.groupid}</groupId>
                <artifactId>${stax.impl.artifact}</artifactId>
                <version>${stax.impl.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>stax</groupId>
                        <artifactId>stax-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.xml.stream</groupId>
                        <artifactId>stax-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>jaxen</groupId>
                <artifactId>jaxen</artifactId>
                <version>1.1.4</version>
            </dependency>
            <dependency>
                <groupId>org.apache.james</groupId>
                <artifactId>apache-mime4j-core</artifactId>
                <!-- Note: snapshot versions are currently not stable because of MIME4J-231 -->
                <version>0.7.2</version>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.core</artifactId>
                <version>${osgi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.compendium</artifactId>
                <version>${osgi.version}</version>
            </dependency>
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>4.11</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>1.3</version>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>1.3</version>
            </dependency>
            <dependency>
                <groupId>xmlunit</groupId>
                <artifactId>xmlunit</artifactId>
                <version>1.3</version>
            </dependency>
            <dependency>
                <groupId>xalan</groupId>
                <artifactId>xalan</artifactId>
                <version>2.7.1</version>
            </dependency>
            <dependency>
                <groupId>xerces</groupId>
                <artifactId>xercesImpl</artifactId>
                <version>2.11.0</version>
            </dependency>
            <dependency>
                <!-- Recent versions of Xerces require this (because they need org.w3c.dom.ElementTraversal) -->
                <groupId>xml-apis</groupId>
                <artifactId>xml-apis</artifactId>
                <version>1.4.01</version>
            </dependency>
	        <dependency>
	            <groupId>net.sf.saxon</groupId>
	            <artifactId>saxon</artifactId>
	            <version>8.7</version>
	        </dependency>
	        <dependency>
	            <groupId>net.sf.saxon</groupId>
	            <artifactId>saxon-dom</artifactId>
	            <version>8.7</version>
	        </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.2</version>
            </dependency>
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>2.1</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.xml.stream</groupId>
                        <artifactId>stax-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.activation</groupId>
                        <artifactId>activation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.sun.xml.bind</groupId>
                <artifactId>jaxb-impl</artifactId>
                <version>2.1.9</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.woodstox</groupId>
                <artifactId>stax2-api</artifactId>
                <version>3.1.1</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.xml.stream</groupId>
                        <artifactId>stax-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jcl</artifactId>
                <version>2.0</version>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>2.0</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.ws</groupId>
                <artifactId>spring-ws-core</artifactId>
                <version>2.2.0.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.ws</groupId>
                <artifactId>spring-ws-security</artifactId>
                <version>2.2.0.RELEASE</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>1.7.4</version>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <properties>
        <osgi.version>4.2.0</osgi.version>
        <stax.impl.groupid>org.codehaus.woodstox</stax.impl.groupid>
        <stax.impl.artifact>woodstox-core-asl</stax.impl.artifact>
        <stax.impl.version>4.2.0</stax.impl.version>
        <failIfNoTests>false</failIfNoTests>
        <!--
        <stax.impl.groupid>com.sun.xml.stream</stax.impl.groupid>
        <stax.impl.artifact>sjsxp</stax.impl.artifact>
        <stax.impl.version>1.0.1</stax.impl.version>
        -->
        <!--
        <stax.impl.groupid>stax</stax.impl.groupid>
        <stax.impl.artifact>stax</stax.impl.artifact>
        <stax.impl.version>1.2.0</stax.impl.version>
        -->
        <shade.plugin.version>1.6</shade.plugin.version>
        <jacoco.version>0.6.3.201306030806</jacoco.version>
    </properties>
    <pluginRepositories>
        <pluginRepository>
            <id>cloudbees-snapshot</id>
            <url>http://repository-veithen.forge.cloudbees.com/snapshot/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
    <build>
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh-external</artifactId>
                <version>2.2</version>
            </extension>
        </extensions>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.felix</groupId>
                    <artifactId>maven-bundle-plugin</artifactId>
                    <version>2.4.0</version>
                    <configuration>
                        <instructions>
                            <!-- These two are for compatibility with maven-bundle-plugin 1.4.0 -->
                            <_nodefaultversion>true</_nodefaultversion>
                            <Bundle-SymbolicName>${project.groupId}.${project.artifactId}</Bundle-SymbolicName>
                        </instructions>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.16</version>
                    <configuration>
                        <includes>
                            <include>**/*Test.java</include>
                        </includes>
                        <!-- Keep heap size small. We have some unit tests that deal with volumes
                             of data proportional to the heap size (to test that Axiom is streaming
                             the data instead of loading it into memory). Obviously, the execution time of
                             these tests also are proportional to the heap size. To accelerate the execution
                             of the tests, we should use a heap size as small as possible. -->
                        <argLine>-Xms16m -Xmx48m ${jacoco.surefireArgLine}</argLine>
                        <systemProperties>
                            <property>
                                <name>java.io.tmpdir</name>
                                <value>${project.build.directory}/tmp</value>
                            </property>
                            <property>
                                <name>java.awt.headless</name>
                                <value>true</value>
                            </property>
                            <!-- Uncomment this to test with the StAX implementation in Java 7 -->
                            <!-- property>
                                <name>javax.xml.stream.XMLInputFactory</name>
                                <value>com.sun.xml.internal.stream.XMLInputFactoryImpl</value>
                            </property>
                            <property>
                                <name>javax.xml.stream.XMLOutputFactory</name>
                                <value>com.sun.xml.internal.stream.XMLOutputFactoryImpl</value>
                            </property -->
                            <!-- Uncomment this to test with BEA's reference implementation -->
                            <!-- property>
                                <name>javax.xml.stream.XMLInputFactory</name>
                                <value>com.bea.xml.stream.MXParserFactory</value>
                            </property>
                            <property>
                                <name>javax.xml.stream.XMLOutputFactory</name>
                                <value>com.bea.xml.stream.XMLOutputFactoryBase</value>
                            </property -->
                        </systemProperties>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>2.8</version>
                </plugin>
                <plugin>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${shade.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>com.agilejava.docbkx</groupId>
                    <artifactId>docbkx-maven-plugin</artifactId>
                    <version>2.0.14</version>
                    <dependencies>
                        <!-- Contains the catalog and DTD/Schema files. We use this to resolve the DTD locally
                             instead of downloading it from the Web -->
                        <dependency>
                            <groupId>net.sf.docbook</groupId>
                            <artifactId>docbook-xml</artifactId>
                            <version>5.0-all</version>
                            <classifier>resources</classifier>
                            <type>zip</type>
                        </dependency>
                        <!-- Upgrade to xml-resolver 1.2. This is merely to make debugging easier (version 1.1
                             neither has debug information nor a source JAR) -->
                        <dependency>
                            <groupId>xml-resolver</groupId>
                            <artifactId>xml-resolver</artifactId>
                            <version>1.2</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>1.7</version>
                </plugin>
                <plugin>
                    <artifactId>maven-release-plugin</artifactId>
                    <configuration>
                        <tagBase>https://svn.apache.org/repos/asf/webservices/commons/tags/axiom</tagBase>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <!-- The default value "clean verify" is not appropriate. If the install
                             phase is not executed, then the current build will pick up artifacts
                             from a previous build. -->
                        <preparationGoals>clean install</preparationGoals>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.2</version>
                    <dependencies>
                        <dependency>
                            <groupId>${project.groupId}</groupId>
                            <artifactId>axiom-buildutils</artifactId>
                            <version>${project.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.2-beta-5</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.gmaven</groupId>
                    <artifactId>gmaven-plugin</artifactId>
                    <version>1.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.7</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.rat</groupId>
                    <artifactId>apache-rat-plugin</artifactId>
                    <version>0.10</version>
                </plugin>
                <plugin>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>1.1</version>
                </plugin>
                <plugin>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>2.3.2</version>
                </plugin>
                <plugin>
                    <artifactId>maven-javadoc-plugin</artifactId>
                    <version>2.9</version>
                </plugin>
                <plugin>
                    <artifactId>maven-invoker-plugin</artifactId>
                    <version>1.8</version>
                </plugin>
                <plugin>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>3.2</version>
                </plugin>
                <plugin>
                    <groupId>org.jvnet.jaxb2.maven2</groupId>
                    <artifactId>maven-jaxb2-plugin</artifactId>
                    <version>0.8.0</version>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>aspectj-maven-plugin</artifactId>
                    <version>1.6</version>
                </plugin>
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.gmaven</groupId>
                                        <artifactId>gmaven-plugin</artifactId>
                                        <versionRange>[0.0.0,)</versionRange>
                                        <goals>
                                            <goal>execute</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.jacoco</groupId>
                                        <artifactId>jacoco-maven-plugin</artifactId>
                                        <versionRange>[0.0.0,)</versionRange>
                                        <goals>
                                            <goal>prepare-agent</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore />
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>validate</phase>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <rules>
                        <requireJavaVersion>
                            <!-- We require Java 6 for the build, but we enforce Java 5 compatibility using Animal Sniffer -->
                            <version>1.6.0</version>
                        </requireJavaVersion>
                        <requireNoRepositories>
                            <message>The POM must not include repository definitions since non Apache repositories threaten the build stability.</message>
                            <banRepositories>true</banRepositories>
                            <banPluginRepositories>true</banPluginRepositories>
                            <!-- We still need to allow the Apache snapshot repository -->
                            <allowSnapshotRepositories>true</allowSnapshotRepositories>
                            <allowSnapshotPluginRepositories>true</allowSnapshotPluginRepositories>
                        </requireNoRepositories>
                    </rules>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.gmaven</groupId>
                <artifactId>gmaven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>initialize</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                import java.io.File
                                
                                <!-- Create the temporary directory specified in the surefire configuration -->
                                new File(project.build.directory, 'tmp').mkdirs()
                                
                                <!-- Skip Jacoco if necessary -->
                                if (project.properties['skipTests'] == 'true') {
                                    println 'Disabling JaCoCo because tests are skipped'
                                    project.properties['skipJacoco'] = 'true'
                                } else if (System.properties['java.specification.version'] == '1.8') {
                                    println 'WARNING: Java 1.8 not supported; disabling JaCoCo'
                                    project.properties['skipJacoco'] = 'true'
                                }
                            </source>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check-jacoco-exec</id>
                        <phase>package</phase>
                        <goals>
                            <goal>execute</goal>
                        </goals>
                        <configuration>
                            <source>
                                if (project.properties['skipJacoco'] == 'true' || !new File(project.build.directory, 'jacoco.exec').exists()) {
                                    project.properties['skipJacocoAttach'] = 'true'
                                }
                            </source>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <inherited>true</inherited>
                <configuration>
                    <source>1.4</source>
                    <target>1.5</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-maven-plugin</artifactId>
                <!-- Note: 1.9 contains a call to a Java 7 specific method (java.nio.CharBuffer.subSequence(II)Ljava/nio/CharBuffer;)
                           that is triggered when an undefined reference is found. This breaks error reporting on Java 6. -->
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>check</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <signature>
                        <groupId>org.codehaus.mojo.signature</groupId>
                        <artifactId>java15</artifactId>
                        <version>1.0</version>
                    </signature>
                </configuration>
            </plugin>
            <plugin>
                <!-- This serves two purposes:
                      (1) we want to generate source JARs for all builds, not just release builds;
                      (2) we need (some of) the source JARs to generate the Javadoc in the apidocs module. -->
                <artifactId>maven-source-plugin</artifactId>
                <executions>
                    <execution>
                        <id>source-jars</id>
                        <goals>
                            <!-- Use "jar-no-fork" instead of "jar" to avoid forking the build
                                 (which is not a problem, but unnecessary) -->
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <attach>true</attach>
                </configuration>
            </plugin>
            <plugin>
                <!-- We need this to make sure that shade:shade is executed after source:jar-no-fork
                     (see MSHADE-120). -->
                <artifactId>maven-shade-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent-for-surefire</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <propertyName>jacoco.surefireArgLine</propertyName>
                            <!-- Anonymize the session ID (by default it contains the name of the host executing the build) -->
                            <sessionId>mvn:${project.groupId}:${project.artifactId}:${project.version}:surefire</sessionId>
                        </configuration>
                    </execution>
                </executions>
                <!-- Configure this on the plugin, not on the execution: it also applies to additional executions
                     configured in individual modules -->
                <configuration>
                    <skip>${skipJacoco}</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>attach-jacoco-exec</id>
                        <phase>package</phase>
                        <goals>
                            <goal>attach-artifact</goal>
                        </goals>
                        <configuration>
                            <skipAttach>${skipJacocoAttach}</skipAttach>
                            <artifacts>
                                <artifact>
                                    <file>${project.build.directory}/jacoco.exec</file>
                                    <classifier>jacoco</classifier>
                                    <type>exec</type>
                                </artifact>
                            </artifacts>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <profiles>
        <profile>
            <id>apache-release</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <!-- Skip the execution configured in org.apache:apache. We use our own configuration. -->
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                                <configuration>
                                    <skipSource>true</skipSource>
                                </configuration>
                            </execution>
                        </executions>
                        <configuration>
                            <attach>true</attach>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.rat</groupId>
                        <artifactId>apache-rat-plugin</artifactId>
                        <executions>
                            <execution>
                                <phase>verify</phase>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <excludes>
                                <!-- Exclusions specific to the root project -->
                                
                                <!-- RAT doesn't recognize this one as notes file -->
                                <exclude>RELEASE-NOTE.txt</exclude>
                                <!-- SVG files are not edited by hand, so license headers would be lost anyway -->
                                <exclude>**/*.svg</exclude>
                                <!-- License file from Jaxen (see LEGAL-74 & WSCOMMONS-545) -->
                                <exclude>legal/jaxen-LICENSE.txt</exclude>
                                <!-- BSD style license -->
                                <exclude>legal/stax2-api-LICENSE.txt</exclude>
                                <!-- Files used by various developer tools -->
                                <exclude>*.sonarj</exclude>
                                <!-- File generated by maven-release-plugin -->
                                <exclude>release.properties</exclude>
                                
                                <!-- Exclusions that apply to submodules -->
                                
                                <!-- We can't add license headers to test resources -->
                                <exclude>src/test/resources/**</exclude>
                                <!-- Temporary file created by maven-shade-plugin -->
                                <exclude>dependency-reduced-pom.xml</exclude>
                            </excludes>
                        </configuration> 
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
    <reporting>
        <plugins>
            <plugin>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>2.6</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>issue-tracking</report>
                            <report>project-team</report>
                            <report>scm</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>
    <distributionManagement>
        <site>
            <id>website</id>
            <url>scpexe://people.apache.org/home/${user.name}/public_html/axiom</url>
        </site>
    </distributionManagement>
    <modules>
        <module>buildutils</module>
        <module>modules/axiom-buildutils</module>
        <module>modules/axiom-api</module>
        <module>modules/axiom-compat</module>
        <module>modules/axiom-jaxb</module>
        <module>modules/axiom-c14n</module>
        <module>modules/axiom-all</module>
        <module>modules/axiom-samples</module>
        <module>axiom-spring-ws</module>
        <module>systests</module>
        <module>forbiddenapi-signatures</module>
        <module>devguide</module>
        <module>userguide</module>
        <module>apidocs</module>
        <module>distribution</module>
        <module>code-coverage</module>
        <module>testing</module>
        <module>aspects</module>
        <module>implementations</module>
    </modules>
</project>
